// Code generated by go-swagger; DO NOT EDIT.

package baz_service

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// BazReader is a Reader for the Baz structure.
type BazReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *BazReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewBazOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewBazOK creates a BazOK with default headers values
func NewBazOK() *BazOK {
	return &BazOK{}
}

/*BazOK handles this case with default header values.

A successful response.
*/
type BazOK struct {
	Payload *BazOKBody
}

func (o *BazOK) Error() string {
	return fmt.Sprintf("[POST /Baz][%d] bazOK  %+v", 200, o.Payload)
}

func (o *BazOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(BazOKBody)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*BazBody baz body
swagger:model BazBody
*/
type BazBody struct {

	// common
	Common *BazParamsBodyCommon `json:"common,omitempty"`
}

// Validate validates this baz body
func (o *BazBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateCommon(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *BazBody) validateCommon(formats strfmt.Registry) error {

	if swag.IsZero(o.Common) { // not required
		return nil
	}

	if o.Common != nil {
		if err := o.Common.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("body" + "." + "common")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *BazBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BazBody) UnmarshalBinary(b []byte) error {
	var res BazBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BazOKBody baz o k body
swagger:model BazOKBody
*/
type BazOKBody struct {

	// something
	Something string `json:"something,omitempty"`
}

// Validate validates this baz o k body
func (o *BazOKBody) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BazOKBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BazOKBody) UnmarshalBinary(b []byte) error {
	var res BazOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}

/*BazParamsBodyCommon baz params body common
swagger:model BazParamsBodyCommon
*/
type BazParamsBodyCommon struct {

	// id
	ID string `json:"id,omitempty"`
}

// Validate validates this baz params body common
func (o *BazParamsBodyCommon) Validate(formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *BazParamsBodyCommon) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *BazParamsBodyCommon) UnmarshalBinary(b []byte) error {
	var res BazParamsBodyCommon
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
